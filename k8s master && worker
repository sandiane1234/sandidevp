##mastern ode and worker node

sudo apt-get update

sudo apt install docker.io -y
sudo chmod 666 /var/run/docker.sock

##install kubelet
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  
 ###If you do not have root access on the target system, you can still install kubectl to the ~/.local/bin directory:
  
 chmod +x kubectl
mkdir -p ~/.local/bin
mv ./kubectl ~/.local/bin/kubectl
# and then append (or prepend) ~/.local/bin to $PATH

kubectl version --client
## now setup kubelet and kubeadm
## avant d'aborder cette etape, toujour aller sur le site "https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/" pour avoir la version non obselete 
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gpg
# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.
sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

sudo systemctl enable --now kubelet

##master node

sudo kubeadm init --pod-network-cidr=10.244.0.0/16
kubeadm init --ignore-preflight-errors=all


## copier le token genere au master  et aller executer sur le woker 
///////


###master node 

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl apply -f https://docs.projectcalico.org/v3.20/manifests/calico.yaml

kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.49.0/deploy/static/provider/baremetal/deploy.yaml

kubectl get nodes
### apres cette commande vous aurez le resultat ci_dessous
root@k8s-master:~# sudo kubectl get nodes
NAME          STATUS   ROLES           AGE   VERSION
k8s-master    Ready    control-plane   20h   v1.29.4
k8s-worker1   Ready    <none>          19h   v1.29.4
k8s-worker2   Ready    <none>          19h   v1.29.4
root@k8s-master:~# 

